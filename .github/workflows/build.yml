name: build

on:
  push:
    branches: ["main"]
    paths:
      - "Dockerfile-alpine"
      - "scripts/setup-alpine-*.sh"
      - "sql-init/*.sql"
      - ".github/workflows/build.yml"
  workflow_dispatch:

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        alpine_version: [3.17, 3.18, 3.19]  # 支持更多 Alpine 版本
        network: ["global", "cn"]
        os: ["alpine"]
    env:
      default_os: alpine
      default_alpine: 3.18
      ns: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build images for os and os_version (alpine)
        if: matrix.os  == 'alpine'
        run: |
          # 构建 {network-info}-{os-info} 标签
          docker build --build-arg ALPINE_VERSION=$os_version -t $ns/mysql:$network-$os -f Dockerfile-alpine .
          # 构建 {network-info}-{os-info}{os_version} 标签
          docker build --build-arg ALPINE_VERSION=$os_version -t $ns/mysql:$network-$os$os_version -f Dockerfile-alpine .
          # 构建 {os-info}{os_version} 标签
          docker build --build-arg ALPINE_VERSION=$os_version -t $ns/mysql:$os$os_version -f Dockerfile-alpine .
        env:
          os_version: ${{ matrix.alpine_version }}
          os: ${{ matrix.os }}
          network: ${{ matrix.network }}

      - name: Build images with default OS
        if: ${{ matrix.os == env.default_os }}
        run: |
          # 构建 {network-info} 标签
          docker build --build-arg ALPINE_VERSION=$os_version -t $ns/mysql:$network -f Dockerfile-alpine .
          # 构建 {os-info} 标签
          docker build --build-arg ALPINE_VERSION=$os_version -t $ns/mysql:$os -f Dockerfile-alpine .
        env:
          os_version: ${{ matrix.alpine_version }}

      - name: Test images
        run: |
          docker run $ns/mysql:$network-$os echo done
          docker run $ns/mysql:$network-$os$os_version echo done
          docker run $ns/mysql:$os$os_version echo done
        env:
          os_version: ${{ matrix.alpine_version }}
          os: ${{ matrix.os }}
          network: ${{ matrix.network }}

      - name: Test images with default OS
        if: ${{ matrix.os == env.default_os }}
        run: |
          docker run $ns/mysql:$network echo done
          docker run $ns/mysql:$os echo done
        env:
          os_version: ${{ matrix.alpine_version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish images
        run: |
          docker push $ns/mysql:$network-$os
          docker push $ns/mysql:$network-$os$os_version
          docker push $ns/mysql:$os$os_version
        env:
          os_version: ${{ matrix.alpine_version }}
          os: ${{ matrix.os }}
          network: ${{ matrix.network }}

      - name: Publish images with default OS
        if: ${{ matrix.os == env.default_os }}
        run: |
          docker push $ns/mysql:$network
          docker push $ns/mysql:$os
        env:
          os_version: ${{ matrix.alpine_version }}