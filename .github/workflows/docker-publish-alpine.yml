name: Publish Alpine MySQL Images

on:
  push:
    branches: ["main"]
    paths:
      - "Dockerfile-alpine"
      - "scripts/setup-alpine-*.sh"
      - "sql-init/*.sql"
  workflow_dispatch:  # 支持手动触发
env:
  REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'docker.io' }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.MYSQL_ALPINE_IMAGE_NAME || 'mysql' }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: ["global", "cn"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Get current date
      #   id: get-date
      #   run: echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-alpine  # 显式指定 Dockerfile-alpine
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.network }}-alpine
            # ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.network }}-${{ steps.get-date.outputs.date }}
          build-args: |
            NETWORK_REGION=${{ matrix.network }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Create Latest Tag
        if: matrix.network == 'global' || matrix.network == 'cn'
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.network }}-alpine
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.network }}-alpine ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.network }}-latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.network }}-latest
